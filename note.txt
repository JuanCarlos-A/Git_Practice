Git 

Este es un sistema para el manejo de control de versiones con una gran cantidad de comandos.
Esto perimte manejar las versiones de un proyecto asi como las contribuciones de los 
trabajadores.

Estos son los comandos que tiene git para poder controlar las versiones y dar funcionalidad
extra al manejo, desde poder ver los cambios realizados, crear alias y mucho mas.

Comandos:

git init : Este comando crea un nuevo repositorio o carperta de nombre .git, en la cual se podran
guardar las versiones.

Making Changes

git add : Este comando tomas todos los archivos que no se encuentren dentro del dominio del 
repositorio y le toma un snapshot, esto permite despues guardar los cambios con un comentario.

git commit : Cuando un snapshot es tomada en el stage o lugar donde git recibira nuevos archivos,
nostros debemos dejar un comentario en el cual de forma detallada explique que cambo se va a realizar.

git diff --cached : Con este comando, nosotros vamos a poder observar los cambios que se encuentran 
del stage apunto de ser comentados.

git status : Este comando nos permitira visualizar el estado de todos los archivos dentro del 
repositorio, ya sea que fueron modificados o simplemente agregados o esperando el commit.

git --version : Con este comando podemos visualizar la version de git con la cual estamos trabajando 
ahora mismo.

git help : Este comando pide ayuda al sistema de git para que podamos visualizar los comandos que 
tenemos disponobles en git.

    Dentro de la rama de funcion de help, nosotros podemos especificar en que comando necesitamos
    ayuda.

git config --global : Nos perimte hacer una configuracion dentro de las propiedades que puede
tener el sistema de control de versiones, podemos especificar que usuario esta relizando los
cambios y con que email. Estas son configuracioones globales.

git config --global -e : Muesta las configuraciones registradas hasta el momento en el sistema
de control de veriones.

git reset : Este comando permite tomar un archivo en el stage y bajarlo del stage para que no reciba
un commit e ingrese los cambios al repositorio.

git branch : Permite crear una nueva rama dentro del repositorio, una rama es un repositorio del
repositorio donde nosotros vamos a poder realizar cambios sin alterar el proyecto principal o
la rama principal.

git checkout --. : Con este comando podemos retirar los ultimos cambios realizados dentro del 
anterior commit, permitiendo volver un paso atras en el tiempo.

git commit -am : Este comando es para realizar un commit para todos los archivos que ya hayan
entrado dentro del stage

git reset --hard : Este comando permite borrar todos los cambios realizados en el stage y en el 
repositorio, permitiendo volver a un estado anterior.

git log : Este comando permite visualizar todos los commits realizados en el repositorio, con
este comando podemos visualizar el autor, la fecha y el comentario del commit.

git log --oneline : Este comando permite visualizar los commits realizados en una sola linea,
permitiendo visualizar de forma mas rapida los commits realizados.

git log --graph : Este comando permite visualizar los commits realizados en una forma de grafo,
permitiendo visualizar de forma mas visual los commits realizados.

git log --oneline --graph : Este comando permite visualizar los commits realizados en una forma
de grafo y en una sola linea, permitiendo visualizar de forma mas rapida y visual los commits.

git log --oneline --graph --all : Este comando permite visualizar los commits realizados en una
forma de grafo y en una sola linea, permitiendo visualizar de forma mas rapida y visual los commits
y ademas visualizar todas las ramas que se encuentran en el repositorio.

git log --oneline --graph --all --decorate : Este comando permite visualizar los commits realizados
en una forma de grafo y en una sola linea, permitiendo visualizar de forma mas rapida y visual los
commits y ademas visualizar todas las ramas que se encuentran en el repositorio y ademas visualizar
los tags que se encuentran en el repositorio.

git log --oneline --graph --all --decorate --stat : Este comando permite visualizar los commits
realizados en una forma de grafo y en una sola linea, permitiendo visualizar de forma mas rapida y
visual los commits y ademas visualizar todas las ramas que se encuentran en el repositorio y ademas
visualizar los tags que se encuentran en el repositorio y ademas visualizar los cambios realizados
en cada commit.

git reset --soft : Este comando permite borrar los cambios realizados en el stage y en el repositorio
pero no los borra del todo, permite volver a un estado anterior.

git reset --mixed : Este comando permite borrar los cambios realizados en el stage y en el repositorio
pero no los borra del todo, permite volver a un estado anterior.

git reset --hard : Este comando permite borrar los cambios realizados en el stage y en el repositorio
pero no los borra del todo, permite volver a un estado anterior.

git reflog : Este comando permite visualizar todos los cambios realizados en el repositorio, permitiendo
visualizar los cambios realizados en el stage y en el repositorio. Nos muestra absolutamente todos los 
cambios ya sean de commits, de reset, de checkou realizados.

git mv : Este comando permite mover un archivo de un directorio a otro, permitiendo cambiar la ubicacion
de un archivo. Este comando tambien permite cambiar el nombre de un archivo. Si se cambia el nombre de un
archivo, git lo tomara como si se hubiera borrado el archivo anterior y se hubiera creado uno nuevo.

git rm : Este comando permite borrar un archivo del repositorio, permitiendo borrar un archivo del
repositorio.

git commit --amend : Este comando permite modificar el ultimo commit realizado, permitiendo cambiar
el comentario del commit o agregar un archivo que se haya olvidado.

git checkout -b : Este comando permite crear una nueva rama y moverse a ella, permitiendo crear una
nueva rama y moverse a ella.

git branch -d : Este comando permite borrar una rama, permitiendo borrar una rama que ya no se
necesite.

git status -s : Este comando permite visualizar el estado de los archivos de forma mas resumida,
permitiendo visualizar los archivos que han sido modificados, los archivos que han sido agregados
y los archivos que han sido borrados.

git status -sb : Este comando permite visualizar el estado de los archivos de forma mas resumida,
permitiendo visualizar los archivos que han sido modificados, los archivos que han sido agregados
y los archivos que han sido borrados y ademas visualizar en que rama se encuentra.


archivo .gitignore : Este archivo permite especificar que archivos no se deben de tomar en cuenta
para el control de versiones, permitiendo que git no tome en cuenta los archivos que se encuentran
en este archivo.

git restore : Este comando permite restaurar un archivo que se haya borrado o modificado, permitiendo
restaurar un archivo que se haya borrado o modificado. Podemos retirar un archivo del stage o 
devolverlo a las carpertas de trabajo.