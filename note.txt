Git 

Este es un sistema para el manejo de control de versiones con una gran cantidad de comandos.
Esto perimte manejar las versiones de un proyecto asi como las contribuciones de los 
trabajadores.

Estos son los comandos que tiene git para poder controlar las versiones y dar funcionalidad
extra al manejo, desde poder ver los cambios realizados, crear alias y mucho mas.

Comandos:

git init : Este comando crea un nuevo repositorio o carperta de nombre .git, en la cual se podran
guardar las versiones.

Making Changes

git add : Este comando tomas todos los archivos que no se encuentren dentro del dominio del 
repositorio y le toma un snapshot, esto permite despues guardar los cambios con un comentario.

git commit : Cuando un snapshot es tomada en el stage o lugar donde git recibira nuevos archivos,
nostros debemos dejar un comentario en el cual de forma detallada explique que cambo se va a realizar.

git diff --cached : Con este comando, nosotros vamos a poder observar los cambios que se encuentran 
del stage apunto de ser comentados.

git status : Este comando nos permitira visualizar el estado de todos los archivos dentro del 
repositorio, ya sea que fueron modificados o simplemente agregados o esperando el commit.

git --version : Con este comando podemos visualizar la version de git con la cual estamos trabajando 
ahora mismo.

git help : Este comando pide ayuda al sistema de git para que podamos visualizar los comandos que 
tenemos disponobles en git.

    Dentro de la rama de funcion de help, nosotros podemos especificar en que comando necesitamos
    ayuda.

git config --global : Nos perimte hacer una configuracion dentro de las propiedades que puede
tener el sistema de control de versiones, podemos especificar que usuario esta relizando los
cambios y con que email. Estas son configuracioones globales.

git config --global -e : Muesta las configuraciones registradas hasta el momento en el sistema
de control de veriones.

git reset : Este comando permite tomar un archivo en el stage y bajarlo del stage para que no reciba
un commit e ingrese los cambios al repositorio.

git branch : Permite crear una nueva rama dentro del repositorio, una rama es un repositorio del
repositorio donde nosotros vamos a poder realizar cambios sin alterar el proyecto principal o
la rama principal.

git checkout --. : Con este comando podemos retirar los ultimos cambios realizados dentro del 
anterior commit, permitiendo volver un paso atras en el tiempo.

git commit -am : Este comando es para realizar un commit para todos los archivos que ya hayan
entrado 
